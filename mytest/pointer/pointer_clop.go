// Code generated by clop-gen; DO NOT EDIT.

package pointer

import (
	"fmt"
	"os"
	"strconv"
	"strings"
	"time"
)


// testPointers的Parse方法，用于解析命令行参数
func (c *testPointers) Parse(args []string) error {
	if len(args) == 0 {
		args = os.Args[1:]
	}

	for i := 0; i < len(args); i++ {
		arg := args[i]
		switch {
		
		case arg == "-s" || arg == "--string":
			
			if i+1 >= len(args) {
				return fmt.Errorf("missing value for --string")
			}
			
			val := args[i+1]
			c.StringPtr = &val
			
			i++
			
		case arg == "-i" || arg == "--int":
			
			if i+1 >= len(args) {
				return fmt.Errorf("missing value for --int")
			}
			
			val, err := strconv.Atoi(args[i+1])
			if err != nil {
				return fmt.Errorf("invalid value for --int: %v", err)
			}
			c.IntPtr = &val
			
			i++
			
		case arg == "-f" || arg == "--float":
			
			if i+1 >= len(args) {
				return fmt.Errorf("missing value for --float")
			}
			
			val, err := strconv.ParseFloat(args[i+1], 64)
			if err != nil {
				return fmt.Errorf("invalid value for --float: %v", err)
			}
			c.FloatPtr = &val
			
			i++
			
		case arg == "-b" || arg == "--bool":
			
			val := true
			c.BoolPtr = &val
			
		case !strings.HasPrefix(arg, "-"):
			
			val := arg
			c.stringarg = &val
			
		default:
			return fmt.Errorf("unknown option: %s", arg)
		}
	}

	return nil
}

func (c *testPointers) Usage() {
	fmt.Println(`USAGE:
  myapp [OPTIONS] [ARGS]

OPTIONS:
    -s, --string    A string pointer
    -i, --int    An integer pointer
    -f, --float    A float pointer
    -b, --bool    A boolean pointer

ARGS:
    stringarg    A string argument as pointer
`)
}